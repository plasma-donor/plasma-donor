{"version":3,"sources":["components/donation/Donation.js","constants/api.js","../node_modules/react-bootstrap/esm/Table.js"],"names":["patientsList","Donation","useState","patients","setPatients","loading","setLoading","message","setMessage","history","useHistory","loggedIn","useContext","loginContext","useEffect","push","Axios","post","API","listDonors","then","res","data","statusCode","catch","e","DATA","msgError","renderDonors","donors","map","donor","index","selected","value","donorId","name","className","msgDonations","animation","role","variant","responsive","striped","bordered","hover","size","style","textAlign","patient","patientName","Control","type","placeholder","donationDate","onChange","patientId","date","target","find","as","donorsList","forEach","onClick","selectedDonor","closeDonationRequest","renderPatients","env","upload","addPatient","editPatient","updatePatient","listPatients","requestPlasma","listDonorsList","Table","React","forwardRef","_ref","ref","bsPrefix","borderless","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass"],"mappings":"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","file":"static/js/7.9a88a9d3.chunk.js","sourcesContent":["// import logo from \"./logo.svg\";\r\nimport Axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Alert, Form, Spinner, Table } from \"react-bootstrap\";\r\nimport { DATA } from \"../../constants/en\";\r\nimport { API } from \"../../constants/api\";\r\nimport { loginContext } from \"../../loginContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst patientsList = [];\r\n\r\nconst Donation = () => {\r\n  const [patients, setPatients] = useState(patientsList);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  let history = useHistory();\r\n  const { loggedIn } = useContext(loginContext);\r\n\r\n  useEffect(() => {\r\n    if (!loggedIn) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [loggedIn, history]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    Axios.post(`${API.listDonors}`)\r\n      .then((res) => {\r\n        if (res && res.data && res.data.statusCode === 200) {\r\n          setLoading(false);\r\n          if (typeof res.data.data === \"string\") {\r\n            setMessage(res.data.data);\r\n          } else {\r\n            setPatients(res.data.data);\r\n          }\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        setMessage(\"Donors: \" + DATA.msgError);\r\n      });\r\n  }, []);\r\n\r\n  const renderSpinner = () => {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const showMessage = () => {\r\n    return loading ? (\r\n      renderSpinner()\r\n    ) : message ? (\r\n      <Alert variant={\"primary\"}>{message}</Alert>\r\n    ) : null;\r\n  };\r\n\r\n  const closeDonationRequest = (patientId) => {\r\n    const patient = patients.find((patient) => patient.patientId == patientId);\r\n\r\n    const selectedDonor = patient.donorsList.find((donor) => {\r\n      return donor.selected == true;\r\n    });\r\n\r\n    if (selectedDonor) {\r\n      setLoading(true);\r\n      Axios.post(`${API.closeDonationRequest}`, {\r\n        patientId,\r\n        donorId: selectedDonor.donorId,\r\n        donationDate: patient.donationDate,\r\n      })\r\n        .then((res) => {\r\n          if (res && res.data && res.data.statusCode === 200) {\r\n            setLoading(false);\r\n            if (typeof res.data.data === \"string\") {\r\n              setMessage(res.data.data);\r\n            } else {\r\n              setMessage(\"Donation request closed successfully\");\r\n            }\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          setLoading(false);\r\n          setMessage(DATA.msgError);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onDonorSelect = (patientId, donorId) => {\r\n    const patient = patients.find((patient) => patient.patientId == patientId);\r\n    patient.donorsList.forEach((donor) => {\r\n      if (donor.donorId == donorId) {\r\n        donor.selected = true;\r\n      }\r\n    });\r\n  };\r\n\r\n  const onDateChange = (patientId, date) => {\r\n    const patient = patients.find((patient) => patient.patientId == patientId);\r\n    patient.donationDate = date;\r\n  };\r\n\r\n  const renderDonors = (donors) => {\r\n    if (donors) {\r\n      return donors.map((donor, index) => {\r\n        donor.selected = false;\r\n        return (\r\n          <option key={donor.donorId} value={donor.donorId}>\r\n            {donor.name}\r\n          </option>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderPatients = () => {\r\n    if (patients) {\r\n      return patients.map((patient, index) => {\r\n        return (\r\n          <tr key={patient.patientId}>\r\n            <td>{index + 1}</td>\r\n            <td>{patient.patientName}</td>\r\n            <td>\r\n              <Form.Control\r\n                type=\"date\"\r\n                placeholder=\"Enter Admission Date\"\r\n                size=\"sm\"\r\n                value={patient.donationDate}\r\n                onChange={(e) =>\r\n                  onDateChange(patient.patientId, e.target.value)\r\n                }\r\n              />\r\n            </td>\r\n            <td>\r\n              <Form.Control\r\n                as=\"select\"\r\n                onChange={(e) =>\r\n                  onDonorSelect(patient.patientId, e.target.value)\r\n                }\r\n              >\r\n                <option value=\"\">Select Donor</option>\r\n                {renderDonors(patient.donorsList)}\r\n              </Form.Control>\r\n            </td>\r\n            <td style={{ textAlign: \"center\" }}>\r\n              <span\r\n                className=\"link\"\r\n                onClick={() => closeDonationRequest(patient.patientId)}\r\n              >\r\n                Close Request\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"text-center mar-top-bot-2rem\">{DATA.msgDonations}</h4>\r\n      <hr />\r\n      {showMessage()}\r\n      <br />\r\n      <Table responsive striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Donation Date</th>\r\n            <th>Matching Donars List</th>\r\n            <th style={{ textAlign: \"center\" }}>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderPatients()}</tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Donation;\r\n","export const URL = {\r\n  local: \"http://localhost:8080/\",\r\n  server: \"https://plasma-donor.herokuapp.com/\",\r\n  aws: \"https://plasmadonation-env.eba-hycfdfsp.us-east-2.elasticbeanstalk.com/\",\r\n};\r\n\r\n// const env = URL.server;\r\nconst env = URL.aws;\r\n\r\nexport const API = {\r\n  upload: `${env}api/patient/upload`,\r\n  addPatient: `${env}api/patient/create`,\r\n  editPatient: `${env}api/patient/findById`,\r\n  updatePatient: `${env}api/patient/update`,\r\n  listPatients: `${env}api/patient/findAll`,\r\n  requestPlasma: `${env}api/plasma/request`,\r\n  listDonors: `${env}api/plasma/request/close/getdata`,\r\n  closeDonationRequest: `${env}api/plasma/request/close/submit`,\r\n  listDonorsList: `${env}api/patient/findAllDonors`,\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;"],"sourceRoot":""}