{"version":3,"sources":["constants/en.js","loginContext.js","img/plasma-min.png","components/topnav/TopNav.js","components/footer/Footer.js","components/login/Login.js","components/share/Share.js","components/about/About.js","components/contact/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["DATA","labelFileName","labelFileType","labelLastModified","msgChooseFile","msgUploading","msgUpload","msgAddPatient","msgAddDonor","msgPatients","msgDonors","msgDonations","msgError","btnUpload","navUpload","navUploadPatients","navAddPatient","navBrand","navPatients","navDonor","navDonors","navDonation","navDonationRaise","footerContactUs","footerAboutUs","footerFAQ","loginContext","createContext","TopNav","history","useHistory","useContext","loggedIn","setLoggedIn","Navbar","bg","variant","expand","Brand","width","height","src","brandImg","alt","title","onClick","push","style","cursor","marginRight","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","to","Text","Button","type","Footer","sticky","Login","useEffect","Row","Col","sm","span","offset","md","lg","Card","Body","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","placeholder","value","readOnly","Check","label","Share","Header","Title","color","href","class","data-text","data-via","data-hashtags","data-lang","data-show-count","paddingTop","size","async","charset","data-href","data-layout","data-size","target","About","Contact","Upload","lazy","Patient","Patients","Donors","Donation","Donor","App","useState","Container","fallback","Spinner","animation","role","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00edaa19.chunk.js","sourcesContent":["export const DATA = {\r\n  labelFileName: \"File Name\",\r\n  labelFileType: \"File Type\",\r\n  labelLastModified: \"Last Modified\",\r\n  msgChooseFile: \"Please choose file before pressing the Upload button\",\r\n  msgUploading: \"Please wait while file is being uploaded\",\r\n  msgUpload: \"Upload data file\",\r\n  msgAddPatient: \"Patient's details\",\r\n  msgAddDonor: \"Donor's details\",\r\n  msgPatients: \"Patient's list\",\r\n  msgDonors: \"Donor's list\",\r\n  msgDonations: \"Close Donation Requests\",\r\n  msgError: \"Error occured so please try again.\",\r\n  btnUpload: \"Upload!\",\r\n  navUpload: \"Upload Donors\",\r\n  navUploadPatients: \"Upload Patients\",\r\n  navAddPatient: \"Add Patient\",\r\n  navBrand: \"Saving Lives\",\r\n  navPatients: \"Patients list\",\r\n  navDonor: \"Add Donor\",\r\n  navDonors: \"Donors list\",\r\n  navDonation: \"Close Request\",\r\n  navDonationRaise: \"Raise Request\",\r\n  footerContactUs: \"Contact Us\",\r\n  footerAboutUs: \"About Us\",\r\n  footerFAQ: \"FAQ\",\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const loginContext = createContext(false);\r\n","export default __webpack_public_path__ + \"static/media/plasma-min.28b04e5f.png\";","import brandImg from \"../../img/plasma-min.png\";\r\nimport React, { useContext } from \"react\";\r\nimport { Button, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DATA } from \"../../constants/en\";\r\nimport \"./TopNav.css\";\r\nimport { loginContext } from \"../../loginContext\";\r\n\r\nconst TopNav = () => {\r\n  let history = useHistory();\r\n  const { loggedIn, setLoggedIn } = useContext(loginContext);\r\n\r\n  const renderMenuItems = () => {\r\n    if (loggedIn) {\r\n      return (\r\n        <>\r\n          <Nav className=\"mr-auto\">\r\n            <NavDropdown title=\"Patient\" id=\"collasible-nav-dropdown\">\r\n              <Link to=\"/patients\" className=\"nav-link\">\r\n                {DATA.navPatients}\r\n              </Link>\r\n              <Link to=\"/patient\" className=\"nav-link\">\r\n                {DATA.navAddPatient}\r\n              </Link>\r\n            </NavDropdown>\r\n            <NavDropdown title=\"Donor\" id=\"collasible-nav-dropdown\">\r\n              <Link to=\"/donors\" className=\"nav-link\">\r\n                {DATA.navDonors}\r\n              </Link>\r\n              <Link to=\"/donor\" className=\"nav-link\">\r\n                {DATA.navDonor}\r\n              </Link>\r\n            </NavDropdown>\r\n            <NavDropdown title=\"Request\" id=\"collasible-nav-dropdown\">\r\n              <Link to=\"/patients\" className=\"nav-link\">\r\n                {DATA.navDonationRaise}\r\n              </Link>\r\n              <Link to=\"/closerequest\" className=\"nav-link\">\r\n                {DATA.navDonation}\r\n              </Link>\r\n            </NavDropdown>\r\n            <NavDropdown title=\"Upload\" id=\"collasible-nav-dropdown\">\r\n              <Link to=\"/upload\" className=\"nav-link\">\r\n                {DATA.navUpload}\r\n              </Link>\r\n              <Link to=\"/upload\" className=\"nav-link\">\r\n                {DATA.navUploadPatients}\r\n              </Link>\r\n            </NavDropdown>\r\n          </Nav>\r\n          <Navbar.Text>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              onClick={() => {\r\n                setLoggedIn(false);\r\n                history.push(\"/login\");\r\n              }}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Navbar.Text>\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand>\r\n        <img\r\n          width=\"30\"\r\n          height=\"30\"\r\n          src={brandImg}\r\n          alt={DATA.navBrand}\r\n          title={DATA.navBrand}\r\n          onClick={() => {\r\n            history.push(\"/login\");\r\n          }}\r\n          style={{ cursor: \"pointer\", marginRight: \".7rem\" }}\r\n        />\r\n        <span\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            history.push(\"/login\");\r\n          }}\r\n        >\r\n          Saving Lives\r\n        </span>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        {renderMenuItems()}\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","// import logo from \"./logo.svg\";\r\nimport React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DATA } from \"../../constants/en\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <hr />\r\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"bottom\">\r\n        <Nav className=\"mr-auto\">\r\n          <Navbar.Text>&copy;</Navbar.Text>\r\n          <Link to=\"/about\" className=\"nav-link\">\r\n            {DATA.footerAboutUs}\r\n          </Link>\r\n          <Link to=\"/faq\" className=\"nav-link\">\r\n            {DATA.footerFAQ}\r\n          </Link>\r\n        </Nav>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","// import logo from \"./logo.svg\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginContext } from \"../../loginContext\";\r\n\r\nconst Login = () => {\r\n  let history = useHistory();\r\n  const { loggedIn, setLoggedIn } = useContext(loginContext);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      history.push(\"/patients\");\r\n    }\r\n  }, [loggedIn, history]);\r\n\r\n  return (\r\n    <Row>\r\n      <Col\r\n        sm={{ span: 6, offset: 3 }}\r\n        md={{ span: 6, offset: 3 }}\r\n        lg={{ span: 6, offset: 3 }}\r\n      >\r\n        <br />\r\n        <Card>\r\n          <Card.Body>\r\n            <Form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n              }}\r\n            >\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value=\"admin@plasma.com\"\r\n                  readOnly\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value=\"password\"\r\n                  readOnly\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n              </Form.Group>\r\n\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n                onClick={() => {\r\n                  setLoggedIn(true);\r\n                  history.push(\"/patients\");\r\n                }}\r\n              >\r\n                Login\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Button, Card, Col, Row } from \"react-bootstrap\";\r\n\r\nconst Share = () => {\r\n  return (\r\n    <Row>\r\n      <Col\r\n        sm={{ span: 6, offset: 3 }}\r\n        md={{ span: 6, offset: 3 }}\r\n        lg={{ span: 6, offset: 3 }}\r\n      >\r\n        <br />\r\n        <Card>\r\n          <Card.Header>\r\n            <h4>Thank You</h4>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>\r\n              Your one step can save a million lives. Thanks for being one of\r\n              the most genuine plasma donor.\r\n            </Card.Title>\r\n            <Card.Text>\r\n              <a\r\n                style={{ color: \"#017374 !important\", marginRight: \"1rem\" }}\r\n                href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\"\r\n                class=\"twitter-share-button\"\r\n                data-text=\"Be The Solution &amp; Become a #PlasmaDonor Today!\"\r\n                data-via=\"plasma52970878\"\r\n                data-hashtags=\"#donateplasma\"\r\n                data-lang=\"en\"\r\n                data-show-count=\"false\"\r\n              >\r\n                <Button\r\n                  style={{ height: \"1.7rem\", width:\"5rem\", paddingTop: 0 }}\r\n                  variant=\"success\"\r\n                  size=\"sm\"\r\n                >\r\n                  Tweet\r\n                </Button>\r\n              </a>\r\n              <script\r\n                async\r\n                src=\"https://platform.twitter.com/widgets.js\"\r\n                charset=\"utf-8\"\r\n              ></script>\r\n\r\n              <span\r\n                class=\"fb-share-button\"\r\n                data-href=\"https://plasma-donor.github.io/plasma-donor/#/fbshare\"\r\n                data-layout=\"button\"\r\n                data-size=\"large\"\r\n              >\r\n                <a\r\n                  target=\"_blank\"\r\n                  href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fplasma-donor.github.io%2Fplasma%2F%23%2Ffbshare&amp;src=sdkpreparse\"\r\n                  class=\"fb-xfbml-parse-ignore\"\r\n                >\r\n                  {/* <Button variant=\"primary\" size=\"sm\">FB Share</Button> */}\r\n                </a>\r\n              </span>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Share;\r\n","import { Card, Col, Row } from \"react-bootstrap\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Row>\r\n      <Col\r\n        sm={{ span: 6, offset: 3 }}\r\n        md={{ span: 6, offset: 3 }}\r\n        lg={{ span: 6, offset: 3 }}\r\n      >\r\n        <br />\r\n        <Card>\r\n          <Card.Header>About Us</Card.Header>\r\n          <Card.Body>\r\n            {/* <Card.Title>About Us</Card.Title> */}\r\n            <Card.Text>\r\n              We help to CONNECTING THOSE IN NEED. Please join us in with\r\n              fighting against Corona Virus.\r\n              <br />\r\n              <br />\r\n              For more details or any queries please write us @\r\n              plasma.donor.demo@gmail.com\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { Card, Col, Row } from \"react-bootstrap\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <Row>\r\n      <Col\r\n        sm={{ span: 6, offset: 3 }}\r\n        md={{ span: 6, offset: 3 }}\r\n        lg={{ span: 6, offset: 3 }}\r\n      >\r\n        <br />\r\n        <Card>\r\n          <Card.Header>FAQ</Card.Header>\r\n          <Card.Body>\r\n            {/* <Card.Title>Contact Us</Card.Title> */}\r\n            <Card.Text>\r\n              <p>Welcome to Plasma Donor Registration Portal</p>\r\n              <p>\r\n                If you have fully recovered from COVID-19, you may be able to\r\n                help patients currently fighting the infection by donating your\r\n                plasma.\r\n              </p>\r\n              <p>Here is the list of FAQ's about Plasma donation</p>\r\n              <br />\r\n              <p>\r\n                <p>\r\n                  1) Who can donate To donate plasma you will need to:\r\n                  <ul>\r\n                    <li>\r\n                      have had coronavirus (either a positive test or symptoms)\r\n                    </li>\r\n                    <li>be over 17</li>\r\n                    <li>be able to travel to one of our donor centres</li>\r\n                    <li>have enough blood to donate safely</li>\r\n                  </ul>\r\n                </p>\r\n                <br />\r\n                <p>2) Importance of Plasma Donation</p>\r\n                <p>\r\n                  Only a small number of people living in the India who are\r\n                  eligible to donate blood or source plasma actually donate.\r\n                  What's important is that we encourage all forms of donation\r\n                  from those who are eligible, so that they may contribute\r\n                  life-saving blood and source plasma to those in need.\r\n                </p>\r\n                <p>\r\n                  The plasma protein therapeutics industry supports volunteerism\r\n                  donation in all of its forms. Source plasma donation and blood\r\n                  donation are critically important activities that contribute\r\n                  to saving lives. Source plasma and recovered plasma are used\r\n                  to produce therapies that treat people with rare, chronic\r\n                  diseases and disorders such as primary immunodeficiency,\r\n                  hemophilia and a genetic lung disease, as well as in the\r\n                  treatment of trauma, burns and shock. Whole blood donations\r\n                  most often are used locally in hospitals for transfusions\r\n                  required during surgery or other medical treatment. Find a\r\n                  donation center near you!\r\n                </p>\r\n                <p>\r\n                  Plasma donation requires a commitment both in the amount of\r\n                  time for each donation and frequency of donation. Typically it\r\n                  takes between one and three hours to donate source plasma, and\r\n                  plasma can be donated twice within a seven day period. Whole\r\n                  blood donation takes less time—under 30 minutes—and donors\r\n                  donate less frequently—no more than once in eight weeks. The\r\n                  programs may fit into a donor's life differently at various\r\n                  times in the donor's life, and are equally important in\r\n                  helping to fulfill a vital medical need.\r\n                </p>\r\n                <br />\r\n                <p>3) Process of Plasma Donation</p>\r\n                <p>\r\n                  You do need to bring the following identification with you:\r\n                </p>\r\n                <p>\r\n                  Current photo I.D. Social Security or Border Crossing ID Proof\r\n                  of local address Once you enter the donation center\r\n                </p>\r\n                <p>\r\n                  A receptionist will greet you and check your I.D. If it is\r\n                  your first visit, you will receive a physical examination.\r\n                </p>\r\n                <p>\r\n                  A center technician will take a small blood sample from your\r\n                  finger to check your protein and hematocrit levels. Complete a\r\n                  Donor History Questionnaire.\r\n                </p>\r\n                If the center staff determines that you are eligible to donate\r\n                plasma, you will be taken to the donation area and seated in a\r\n                comfortable seating bed.\r\n              </p>\r\n              <p>\r\n                A technician will prepare your arm with antiseptic, insert the\r\n                needle, and begin the donation process. Blood will be drawn,\r\n                plasma will be separated from your blood, and red blood cells\r\n                will be returned to your body through a process called\r\n                plasmapheresis.\r\n              </p>\r\n              <p>\r\n                Your first donation will take approximately 2 hours. Return\r\n                visits on average take about 90 minutes. When you are finished,\r\n                you will check out and receive compensation to thank you for\r\n                your time. The amount of compensation is determined by each\r\n                plasma collection facility. A staff member at the plasma center\r\n                will be available to answer any questions you may have.\r\n              </p>\r\n              <br />\r\n              <p>4) Your Personal Health and Safety</p>\r\n              <p>\r\n                Your safety and health are of utmost importance. All equipment\r\n                and materials are sterile and for one-time use only. Center\r\n                staff receives ongoing training to provide a safe and pleasant\r\n                experience. Plasma donation is strictly regulated by government\r\n                authorities. In addition, companies adhere to voluntary\r\n                standards through International Quality Plasma Program\r\n                certification. Centers are inspected and certified by\r\n                independent auditors and adhere to regulatory reporting\r\n                requirements.\r\n              </p>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","// import logo from \"./logo.svg\";\r\nimport React, { lazy, Suspense, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nimport \"./App.css\";\r\nimport TopNav from \"./components/topnav/TopNav\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport Login from \"./components/login/Login\";\r\nimport Share from \"./components/share/Share\";\r\nimport About from \"./components/about/About\";\r\nimport Contact from \"./components/contact/Contact\";\r\nimport { loginContext } from \"./loginContext\";\r\n\r\nconst Upload = lazy(() => import(\"./components/upload/Upload\"));\r\nconst Patient = lazy(() => import(\"./components/patient/Patient\"));\r\nconst Patients = lazy(() => import(\"./components/patients/Patients\"));\r\nconst Donors = lazy(() => import(\"./components/donors/Donors\"));\r\nconst Donation = lazy(() => import(\"./components/donation/Donation\"));\r\nconst Donor = lazy(() => import(\"./components/donor/Donor\"));\r\n\r\nconst renderSpinner = () => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        {\" \"}\r\n      </Spinner>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"App\">\r\n          <Suspense fallback={renderSpinner()}>\r\n            <Router>\r\n              <loginContext.Provider value={{ loggedIn, setLoggedIn }}>\r\n                <TopNav></TopNav>\r\n                <Switch>\r\n                  <Route path=\"/patients\">\r\n                    <Patients></Patients>\r\n                  </Route>\r\n                  <Route path=\"/patient/:id\">\r\n                    <Patient></Patient>\r\n                  </Route>\r\n                  <Route path=\"/patient\">\r\n                    <Patient></Patient>\r\n                  </Route>\r\n                  <Route path=\"/upload\">\r\n                    <Upload></Upload>\r\n                  </Route>\r\n                  <Route path=\"/closerequest\">\r\n                    <Donation></Donation>\r\n                  </Route>\r\n                  <Route path=\"/fbshare\">\r\n                    <Share></Share>\r\n                  </Route>\r\n                  <Route path=\"/about\">\r\n                    <About></About>\r\n                  </Route>\r\n                  <Route path=\"/faq\">\r\n                    <Contact></Contact>\r\n                  </Route>\r\n                  <Route path=\"/donors\">\r\n                    <Donors></Donors>\r\n                  </Route>\r\n                  <Route path=\"/donor/:id\">\r\n                    <Donor></Donor>\r\n                  </Route>\r\n                  <Route path=\"/donor\">\r\n                    <Donor></Donor>\r\n                  </Route>\r\n                  <Route path=\"/\">\r\n                    <Login></Login>\r\n                  </Route>\r\n                </Switch>\r\n              </loginContext.Provider>\r\n              <Footer></Footer>\r\n            </Router>\r\n          </Suspense>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}