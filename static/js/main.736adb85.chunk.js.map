{"version":3,"sources":["constants/en.js","img/plasma-min.png","components/topnav/TopNav.js","components/footer/Footer.js","components/login/Login.js","components/share/Share.js","components/about/About.js","components/contact/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["DATA","labelFileName","labelFileType","labelLastModified","msgChooseFile","msgUploading","msgUpload","msgAddPatient","msgAddDonor","msgPatients","msgDonors","msgDonations","msgError","btnUpload","navUpload","navUploadPatients","navAddPatient","navBrand","navPatients","navDonor","navDonors","navDonation","navDonationRaise","footerContactUs","footerAboutUs","TopNav","history","useHistory","Navbar","bg","variant","expand","Brand","width","height","src","brandImg","alt","title","onClick","push","style","cursor","marginRight","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","to","Text","Button","type","Footer","sticky","Login","Row","Col","sm","span","offset","md","lg","Card","Body","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","placeholder","value","readOnly","Check","label","Share","Header","Title","color","href","class","data-text","data-via","data-hashtags","data-lang","data-show-count","paddingTop","size","async","charset","data-href","data-layout","data-size","target","About","Contact","Upload","lazy","Patient","Patients","Donors","Donation","Donor","App","Container","fallback","Spinner","animation","role","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.736adb85.chunk.js","sourcesContent":["export const DATA = {\r\n  labelFileName: \"File Name\",\r\n  labelFileType: \"File Type\",\r\n  labelLastModified: \"Last Modified\",\r\n  msgChooseFile: \"Please choose file before pressing the Upload button\",\r\n  msgUploading: \"Please wait while file is being uploaded\",\r\n  msgUpload: \"Upload data file\",\r\n  msgAddPatient: \"Patient's details\",\r\n  msgAddDonor: \"Donor's details\",\r\n  msgPatients: \"Patient's list\",\r\n  msgDonors: \"Donor's list\",\r\n  msgDonations: \"Close Donation Requests\",\r\n  msgError: \"Error occured so please try again.\",\r\n  btnUpload: \"Upload!\",\r\n  navUpload: \"Upload Donors\",\r\n  navUploadPatients: \"Upload Patients\",\r\n  navAddPatient: \"Add Patient\",\r\n  navBrand: \"Saving Lives\",\r\n  navPatients: \"Patients list\",\r\n  navDonor: \"Add Donor\",\r\n  navDonors: \"Donors list\",\r\n  navDonation: \"Close Request\",\r\n  navDonationRaise: \"Raise Request\",\r\n  footerContactUs: \"Contact Us\",\r\n  footerAboutUs: \"About Us\",\r\n};\r\n","export default __webpack_public_path__ + \"static/media/plasma-min.28b04e5f.png\";","import brandImg from \"../../img/plasma-min.png\";\r\nimport React from \"react\";\r\nimport { Button, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DATA } from \"../../constants/en\";\r\nimport \"./TopNav.css\";\r\n\r\nconst TopNav = () => {\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand>\r\n        <img\r\n          width=\"30\"\r\n          height=\"30\"\r\n          src={brandImg}\r\n          alt={DATA.navBrand}\r\n          title={DATA.navBrand}\r\n          onClick={() => {\r\n            history.push(\"/login\");\r\n          }}\r\n          style={{ cursor: \"pointer\", marginRight: \".7rem\" }}\r\n        />\r\n        <span\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            history.push(\"/login\");\r\n          }}\r\n        >\r\n          Saving Lives\r\n        </span>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavDropdown title=\"Patient\" id=\"collasible-nav-dropdown\">\r\n            <Link to=\"/patients\" className=\"nav-link\">\r\n              {DATA.navPatients}\r\n            </Link>\r\n            <Link to=\"/patient\" className=\"nav-link\">\r\n              {DATA.navAddPatient}\r\n            </Link>\r\n          </NavDropdown>\r\n          <NavDropdown title=\"Donor\" id=\"collasible-nav-dropdown\">\r\n            <Link to=\"/donors\" className=\"nav-link\">\r\n              {DATA.navDonors}\r\n            </Link>\r\n            <Link to=\"/donor\" className=\"nav-link\">\r\n              {DATA.navDonor}\r\n            </Link>\r\n          </NavDropdown>\r\n          <NavDropdown title=\"Request\" id=\"collasible-nav-dropdown\">\r\n            <Link to=\"/patients\" className=\"nav-link\">\r\n              {DATA.navDonationRaise}\r\n            </Link>\r\n            <Link to=\"/closerequest\" className=\"nav-link\">\r\n              {DATA.navDonation}\r\n            </Link>\r\n          </NavDropdown>\r\n          <NavDropdown title=\"Upload\" id=\"collasible-nav-dropdown\">\r\n            <Link to=\"/upload\" className=\"nav-link\">\r\n              {DATA.navUpload}\r\n            </Link>\r\n            <Link to=\"/upload\" className=\"nav-link\">\r\n              {DATA.navUploadPatients}\r\n            </Link>\r\n          </NavDropdown>\r\n        </Nav>\r\n        <Navbar.Text>\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              history.push(\"/login\");\r\n            }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Navbar.Text>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n    // <Navbar bg=\"light\" expand=\"lg\">\r\n    //   <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n    //   <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    //   <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    //     <Nav className=\"mr-auto\">\r\n    //       <Nav.Link href=\"#home\">Home</Nav.Link>\r\n    //       <Nav.Link href=\"#link\">Link</Nav.Link>\r\n    //       <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n    //         <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n    //         <NavDropdown.Item href=\"#action/3.2\">\r\n    //           Another action\r\n    //         </NavDropdown.Item>\r\n    //         <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n    //         <NavDropdown.Divider />\r\n    //         <NavDropdown.Item href=\"#action/3.4\">\r\n    //           Separated link\r\n    //         </NavDropdown.Item>\r\n    //       </NavDropdown>\r\n    //     </Nav>\r\n    //   </Navbar.Collapse>\r\n    // </Navbar>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","// import logo from \"./logo.svg\";\r\nimport React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DATA } from \"../../constants/en\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <hr />\r\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"bottom\">\r\n        <Nav className=\"mr-auto\">\r\n          <Link to=\"/contact\" className=\"nav-link\">\r\n            {DATA.footerContactUs}\r\n          </Link>\r\n          <Link to=\"/about\" className=\"nav-link\">\r\n            {DATA.footerAboutUs}\r\n          </Link>\r\n        </Nav>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","// import logo from \"./logo.svg\";\r\nimport React from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  let history = useHistory();\r\n  return (\r\n    <Row>\r\n      <Col\r\n        sm={{ span: 6, offset: 3 }}\r\n        md={{ span: 6, offset: 3 }}\r\n        lg={{ span: 6, offset: 3 }}\r\n      >\r\n        <br />\r\n        <Card>\r\n          <Card.Body>\r\n            <Form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n              }}\r\n            >\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value=\"admin@plasma.com\"\r\n                  readOnly\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value=\"password\"\r\n                  readOnly\r\n                />\r\n              </Form.Group>\r\n              \r\n              <Form.Group controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n              </Form.Group>\r\n              \r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n                onClick={() => {\r\n                  history.push(\"/patients\");\r\n                }}\r\n              >\r\n                Login\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Button, Card, Col, Row } from \"react-bootstrap\";\r\n\r\nconst Share = () => {\r\n  return (\r\n    <Row>\r\n      <Col\r\n        sm={{ span: 6, offset: 3 }}\r\n        md={{ span: 6, offset: 3 }}\r\n        lg={{ span: 6, offset: 3 }}\r\n      >\r\n        <br />\r\n        <Card>\r\n          <Card.Header>\r\n            <h4>Thank You</h4>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>\r\n              Your one step can save a million lives. Thanks for being one of\r\n              the most genuine plasma donor.\r\n            </Card.Title>\r\n            <Card.Text>\r\n              <a\r\n                style={{ color: \"#017374 !important\", marginRight: \"1rem\" }}\r\n                href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\"\r\n                class=\"twitter-share-button\"\r\n                data-text=\"Be The Solution &amp; Become a #PlasmaDonor Today!\"\r\n                data-via=\"plasma52970878\"\r\n                data-hashtags=\"#donateplasma\"\r\n                data-lang=\"en\"\r\n                data-show-count=\"false\"\r\n              >\r\n                <Button\r\n                  style={{ height: \"1.7rem\", width:\"5rem\", paddingTop: 0 }}\r\n                  variant=\"success\"\r\n                  size=\"sm\"\r\n                >\r\n                  Tweet\r\n                </Button>\r\n              </a>\r\n              <script\r\n                async\r\n                src=\"https://platform.twitter.com/widgets.js\"\r\n                charset=\"utf-8\"\r\n              ></script>\r\n\r\n              <span\r\n                class=\"fb-share-button\"\r\n                data-href=\"https://plasma-donor.github.io/plasma-donor/#/fbshare\"\r\n                data-layout=\"button\"\r\n                data-size=\"large\"\r\n              >\r\n                <a\r\n                  target=\"_blank\"\r\n                  href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fplasma-donor.github.io%2Fplasma%2F%23%2Ffbshare&amp;src=sdkpreparse\"\r\n                  class=\"fb-xfbml-parse-ignore\"\r\n                >\r\n                  {/* <Button variant=\"primary\" size=\"sm\">FB Share</Button> */}\r\n                </a>\r\n              </span>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Share;\r\n","import { Card, Col, Row } from \"react-bootstrap\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Row>\r\n      <Col\r\n        sm={{ span: 6, offset: 3 }}\r\n        md={{ span: 6, offset: 3 }}\r\n        lg={{ span: 6, offset: 3 }}\r\n      >\r\n        <br />\r\n        <Card>\r\n          <Card.Header>About Us</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>About Us</Card.Title>\r\n            <Card.Text>About Us.</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { Card, Col, Row } from \"react-bootstrap\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <Row>\r\n      <Col\r\n        sm={{ span: 6, offset: 3 }}\r\n        md={{ span: 6, offset: 3 }}\r\n        lg={{ span: 6, offset: 3 }}\r\n      >\r\n        <br />\r\n        <Card>\r\n          <Card.Header>Contact Us</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>Contact Us</Card.Title>\r\n            <Card.Text>Contact Us.</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","// import logo from \"./logo.svg\";\r\nimport React, { lazy, Suspense } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nimport \"./App.css\";\r\nimport TopNav from \"./components/topnav/TopNav\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport Login from \"./components/login/Login\";\r\nimport Share from \"./components/share/Share\";\r\nimport About from \"./components/about/About\";\r\nimport Contact from \"./components/contact/Contact\";\r\n\r\nconst Upload = lazy(() => import(\"./components/upload/Upload\"));\r\nconst Patient = lazy(() => import(\"./components/patient/Patient\"));\r\nconst Patients = lazy(() => import(\"./components/patients/Patients\"));\r\nconst Donors = lazy(() => import(\"./components/donors/Donors\"));\r\nconst Donation = lazy(() => import(\"./components/donation/Donation\"));\r\nconst Donor = lazy(() => import(\"./components/donor/Donor\"));\r\n\r\nconst renderSpinner = () => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        {\" \"}\r\n      </Spinner>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"App\">\r\n          <Suspense fallback={renderSpinner()}>\r\n            <Router>\r\n              <TopNav></TopNav>\r\n              <Switch>\r\n                <Route path=\"/patients\">\r\n                  <Patients></Patients>\r\n                </Route>\r\n                <Route path=\"/patient/:id\">\r\n                  <Patient></Patient>\r\n                </Route>\r\n                <Route path=\"/patient\">\r\n                  <Patient></Patient>\r\n                </Route>\r\n                <Route path=\"/upload\">\r\n                  <Upload></Upload>\r\n                </Route>\r\n                <Route path=\"/closerequest\">\r\n                  <Donation></Donation>\r\n                </Route>\r\n                <Route path=\"/fbshare\">\r\n                  <Share></Share>\r\n                </Route>\r\n                <Route path=\"/about\">\r\n                  <About></About>\r\n                </Route>\r\n                <Route path=\"/contact\">\r\n                  <Contact></Contact>\r\n                </Route>\r\n                <Route path=\"/donors\">\r\n                  <Donors></Donors>\r\n                </Route>\r\n                <Route path=\"/donor/:id\">\r\n                  <Donor></Donor>\r\n                </Route>\r\n                <Route path=\"/donor\">\r\n                  <Donor></Donor>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Login></Login>\r\n                </Route>\r\n              </Switch>\r\n              <Footer></Footer>\r\n            </Router>\r\n          </Suspense>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}