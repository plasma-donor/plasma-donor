{"version":3,"sources":["../node_modules/react-bootstrap/esm/InputGroup.js","components/patient/Patient.js","constants/api.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","Component","InputGroup","React","forwardRef","_ref","ref","bsPrefix","size","className","_ref$as","as","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","displayName","InputGroupWithExtras","Text","Radio","type","Checkbox","Append","Prepend","initialState","name","age","gender","mobile","email","address","city","state","zip","weight","bloodGroup","hbLevel","admissionDate","dischargeDate","willingToDonate","hasCovidRecovered","hasCancerPatient","hasHIV","hasHepatitis","hasBP","hasHTLV1","hasHeartAilment","hasKidneyAilment","hasPrgenantInPast","hasTB","hasTatto","hasSurgery","reducer","action","payload","Error","Patient","useReducer","dispatch","useState","loading","setLoading","message","setMessage","id","useParams","history","useHistory","useEffect","Axios","post","API","editPatient","then","res","data","statusCode","catch","e","DATA","msgError","showMessage","animation","role","variant","msgAddPatient","onSubmit","updatePatient","push","addPatient","preventDefault","onReset","Group","Row","Label","Col","sm","Control","placeholder","value","onChange","target","required","disabled","env","upload","listPatients","requestPlasma","listDonors","closeDonationRequest","listDonorsList","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties"],"mappings":"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","file":"static/js/6.1819c030.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","import React, { useEffect, useReducer, useState } from \"react\";\r\nimport { DATA } from \"../../constants/en\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  Spinner,\r\n  InputGroup,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport { API } from \"../../constants/api\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  age: \"\",\r\n  gender: \"\",\r\n  mobile: \"\",\r\n  email: \"\",\r\n  address: \"\",\r\n  city: \"\",\r\n  state: \"\",\r\n  zip: \"\",\r\n  weight: \"\",\r\n  bloodGroup: \"A\",\r\n  hbLevel: \"\",\r\n  admissionDate: \"\",\r\n  dischargeDate: \"\",\r\n  willingToDonate: \"Y\",\r\n  hasCovidRecovered: \"N\",\r\n  hasCancerPatient: \"N\",\r\n  hasHIV: \"N\",\r\n  hasHepatitis: \"N\",\r\n  hasBP: \"N\",\r\n  hasHTLV1: \"N\",\r\n  hasHeartAilment: \"N\",\r\n  hasKidneyAilment: \"N\",\r\n  hasPrgenantInPast: \"N\",\r\n  hasTB: \"N\",\r\n  hasTatto: \"N\",\r\n  hasSurgery: \"N\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  // console.log(state, action);\r\n  switch (action.type) {\r\n    case \"name\":\r\n      return { ...state, name: action.payload };\r\n    case \"age\":\r\n      return { ...state, age: action.payload };\r\n    case \"gender\":\r\n      return { ...state, gender: action.payload };\r\n    case \"mobile\":\r\n      return { ...state, mobile: action.payload };\r\n    case \"email\":\r\n      return { ...state, email: action.payload };\r\n    case \"address\":\r\n      return { ...state, address: action.payload };\r\n    case \"state\":\r\n      return { ...state, state: action.payload };\r\n    case \"city\":\r\n      return { ...state, city: action.payload };\r\n    case \"zip\":\r\n      return { ...state, zip: action.payload };\r\n    case \"weight\":\r\n      return { ...state, weight: action.payload };\r\n    case \"bloodGroup\":\r\n      return { ...state, bloodGroup: action.payload };\r\n    case \"hbLevel\":\r\n      return { ...state, hbLevel: action.payload };\r\n    case \"admissionDate\":\r\n      return { ...state, admissionDate: action.payload };\r\n    case \"dischargeDate\":\r\n      return { ...state, dischargeDate: action.payload };\r\n    case \"willingToDonate\":\r\n      return { ...state, willingToDonate: action.payload };\r\n    case \"hasCovidRecovered\":\r\n      return { ...state, hasCovidRecovered: action.payload };\r\n    case \"hasCancerPatient\":\r\n      return { ...state, hasCancerPatient: action.payload };\r\n    case \"hasHIV\":\r\n      return { ...state, hasHIV: action.payload };\r\n    case \"hasHepatitis\":\r\n      return { ...state, hasHepatitis: action.payload };\r\n    case \"hasBP\":\r\n      return { ...state, hasBP: action.payload };\r\n    case \"hasHTLV1\":\r\n      return { ...state, hasHTLV1: action.payload };\r\n    case \"hasHeartAilment\":\r\n      return { ...state, hasHeartAilment: action.payload };\r\n    case \"hasKidneyAilment\":\r\n      return { ...state, hasKidneyAilment: action.payload };\r\n    case \"hasPrgenantInPast\":\r\n      return { ...state, hasPrgenantInPast: action.payload };\r\n    case \"hasTB\":\r\n      return { ...state, hasTB: action.payload };\r\n    case \"hasTatto\":\r\n      return { ...state, hasTatto: action.payload };\r\n    case \"hasSurgery\":\r\n      return { ...state, hasSurgery: action.payload };\r\n    case \"submit\":\r\n      return initialState;\r\n    case \"reset\":\r\n      return initialState;\r\n    case \"get\":\r\n      return { ...action.payload };\r\n    case \"update\":\r\n      return state;\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst Patient = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      setLoading(true);\r\n      Axios.post(`${API.editPatient}/${id}`)\r\n        .then((res) => {\r\n          if (res && res.data && res.data.statusCode === 200) {\r\n            setLoading(false);\r\n            if (typeof res.data.data === \"string\") {\r\n              setMessage(res.data.data);\r\n            } else {\r\n              // setMessage(\"Patient form loaded successfully for updating.\");\r\n              dispatch({ type: \"get\", payload: res.data.data });\r\n            }\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          setLoading(false);\r\n          setMessage(DATA.msgError);\r\n        });\r\n    } else {\r\n      dispatch({ type: \"reset\" });\r\n    }\r\n  }, [id]);\r\n\r\n  const renderSpinner = () => {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    setLoading(true);\r\n    if (id) {\r\n      Axios.post(`${API.updatePatient}/${id}`, state)\r\n        .then((res) => {\r\n          if (res && res.data && res.data.statusCode === 200) {\r\n            setLoading(false);\r\n            history.push(\"/patients\")\r\n            // setMessage(\"Patient successfully updated\");\r\n            // dispatch({ type: \"update\" });\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          setLoading(false);\r\n          setMessage(DATA.msgError);\r\n        });\r\n    } else {\r\n      Axios.post(API.addPatient, state)\r\n        .then((res) => {\r\n          if (res && res.data && res.data.statusCode === 200) {\r\n            setLoading(false);\r\n            history.push(\"/patients\")\r\n            // setMessage(\"Patient successfully added\");\r\n            // dispatch({ type: \"submit\" });\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          setLoading(false);\r\n          setMessage(DATA.msgError);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onReset = () => {\r\n    setMessage(\"\");\r\n    dispatch({ type: \"reset\" });\r\n  };\r\n\r\n  const showMessage = () => {\r\n    return loading ? (\r\n      renderSpinner()\r\n    ) : message ? (\r\n      <Alert variant={\"primary\"}>{message}</Alert>\r\n    ) : null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"text-center mar-top-bot-2rem\">{DATA.msgAddPatient}</h4>\r\n      <hr />\r\n      {showMessage()}\r\n      <br />\r\n      <Form\r\n        onSubmit={(e) => {\r\n          onSubmit();\r\n          e.preventDefault();\r\n        }}\r\n        onReset={onReset}\r\n      >\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Full Name\r\n          </Form.Label>\r\n          <Col sm=\"10\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Full Name\"\r\n              size=\"sm\"\r\n              value={state.name}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"name\", payload: e.target.value })\r\n              }\r\n              required\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Age\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Age\"\r\n              size=\"sm\"\r\n              value={state.age}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"age\", payload: e.target.value })\r\n              }\r\n              required\r\n            />\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Gender{\" \"}\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.gender}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"gender\", payload: e.target.value })\r\n              }\r\n              required\r\n            >\r\n              <option value=\"\">Select Gender</option>\r\n              <option value=\"M\">Male</option>\r\n              <option value=\"F\">Female</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Mobile\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"basic-addon1\">+91</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                type=\"number\"\r\n                placeholder=\"Enter Mobile No\"\r\n                // size=\"sm\"\r\n                value={state.mobile}\r\n                onChange={(e) =>\r\n                  dispatch({ type: \"mobile\", payload: e.target.value })\r\n                }\r\n                required\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Email Id\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter Email Id\"\r\n              // size=\"sm\"\r\n              value={state.email}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"email\", payload: e.target.value })\r\n              }\r\n              required\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Address\r\n          </Form.Label>\r\n          <Col>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Address\"\r\n              size=\"sm\"\r\n              value={state.address}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"address\", payload: e.target.value })\r\n              }\r\n              required\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            State\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter State\"\r\n              size=\"sm\"\r\n              value={state.state}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"state\", payload: e.target.value })\r\n              }\r\n              required\r\n            />\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            City\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter City\"\r\n              size=\"sm\"\r\n              value={state.city}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"city\", payload: e.target.value })\r\n              }\r\n              required\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Zip\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Zip\"\r\n              size=\"sm\"\r\n              value={state.zip}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"zip\", payload: e.target.value })\r\n              }\r\n              required\r\n            />\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Weight\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Weight\"\r\n              size=\"sm\"\r\n              value={state.weight}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"weight\", payload: e.target.value })\r\n              }\r\n              required\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Blood\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.bloodGroup}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"bloodGroup\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"A+\">A+</option>\r\n              <option value=\"A-\">A-</option>\r\n              <option value=\"B+\">B+</option>\r\n              <option value=\"B-\">B-</option>\r\n              <option value=\"AB+\">AB+</option>\r\n              <option value=\"AB-\">AB-</option>\r\n              <option value=\"O+\">O+</option>\r\n              <option value=\"O-\">O-</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            HB Level\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter HB Level\"\r\n              size=\"sm\"\r\n              value={state.hbLevel}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hbLevel\", payload: e.target.value })\r\n              }\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Admission Date\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"date\"\r\n              placeholder=\"Enter Admission Date\"\r\n              size=\"sm\"\r\n              value={state.admissionDate}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"admissionDate\", payload: e.target.value })\r\n              }\r\n              required\r\n            />\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Discharge Date\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              type=\"date\"\r\n              placeholder=\"Enter Discharge Date\"\r\n              size=\"sm\"\r\n              value={state.dischargeDate}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"dischargeDate\", payload: e.target.value })\r\n              }\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Willing to donate?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.willingToDonate}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"willingToDonate\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option>Yes</option>\r\n              <option>No</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has covid recovered?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasCovidRecovered}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasCovidRecovered\", payload: e.target.value })\r\n              }\r\n              disabled\r\n            >\r\n              <option value=\"N\">No</option>\r\n              <option value=\"Y\">Yes</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has Cancer patient?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasCancerPatient}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasCancerPatient\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"N\">No</option>\r\n              <option value=\"Y\">Yes</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has HIV?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasHIV}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasHIV\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"N\">No</option>\r\n              <option value=\"Y\">Yes</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has Hepatitis?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasHepatitis}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasHepatitis\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"N\">No</option>\r\n              <option value=\"Y\">Yes</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has BP?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasBP}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasBP\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"N\">No</option>\r\n              <option value=\"Y\">Yes</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has HTLV1?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasHTLV1}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasHTLV1\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"N\">No</option>\r\n              <option value=\"Y\">Yes</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has Heart Ailment?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasHeartAilment}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasHeartAilment\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"N\">No</option>\r\n              <option value=\"Y\">Yes</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has Kidney Ailment?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasKidneyAilment}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasKidneyAilment\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"N\">No</option>\r\n              <option value=\"Y\">Yes</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has Pregnant in Past?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasPrgenantInPast}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasPrgenantInPast\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"N\">No</option>\r\n              <option value=\"Y\">Yes</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has TB?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasTB}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasTB\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"N\">No</option>\r\n              <option value=\"Y\">Yes</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has Tatto?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasTatto}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasTatto\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"N\">No</option>\r\n              <option value=\"Y\">Yes</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label as={Col} sm=\"2\">\r\n            Has Surgery?\r\n          </Form.Label>\r\n          <Col sm=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={state.hasSurgery}\r\n              onChange={(e) =>\r\n                dispatch({ type: \"hasSurgery\", payload: e.target.value })\r\n              }\r\n            >\r\n              <option value=\"N\">No</option>\r\n              <option value=\"Y\">Yes</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <div className=\"text-center\">\r\n          <Button variant=\"primary\" type=\"submit\" size=\"sm\">\r\n            Submit\r\n          </Button>{\" \"}\r\n          <Button variant=\"secondary\" type=\"reset\" size=\"sm\">\r\n            Reset\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n      <br />\r\n      {showMessage()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Patient;\r\n","export const URL = {\r\n  local: \"http://localhost:8080/\",\r\n  server: \"https://plasma-donor.herokuapp.com/\",\r\n  aws: \"https://plasmadonation-env.eba-hycfdfsp.us-east-2.elasticbeanstalk.com/\",\r\n};\r\n\r\n// const env = URL.server;\r\nconst env = URL.aws;\r\n\r\nexport const API = {\r\n  upload: `${env}api/patient/upload`,\r\n  addPatient: `${env}api/patient/create`,\r\n  editPatient: `${env}api/patient/findById`,\r\n  updatePatient: `${env}api/patient/update`,\r\n  listPatients: `${env}api/patient/findAll`,\r\n  requestPlasma: `${env}api/plasma/request`,\r\n  listDonors: `${env}api/plasma/request/close/getdata`,\r\n  closeDonationRequest: `${env}api/plasma/request/close/submit`,\r\n  listDonorsList: `${env}api/patient/findAllDonors`,\r\n};\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}